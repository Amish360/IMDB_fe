{"ast":null,"code":"import _slicedToArray from \"/home/amishtoor/DjangoProjects/IMDB/imdb_clone/imdb_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/amishtoor/DjangoProjects/IMDB/imdb_clone/imdb_front/src/components/Shows/ShowCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nvar ShowCard = function ShowCard(_ref) {\n  var show = _ref.show;\n  var showDetailPath = \"/show/\".concat(show.tconst);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    averageRating = _useState2[0],\n    setAverageRating = _useState2[1];\n  var fetchData = function fetchData() {\n    // Make an API request to fetch the averageRating for the current show.tconst\n    fetch(\"http://127.0.0.1:8000/shows/api/titleRatings/\".concat(show.tconst, \"/\")).then(function (response) {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(function (data) {\n      setAverageRating(data.averageRating); // Assuming the API returns an array with one item\n      console.log(data.averageRating);\n    }).catch(function (error) {\n      console.error('Error fetching averageRating:', error);\n    });\n  };\n  useEffect(function () {\n    fetchData(); // Call fetchData when the component mounts\n  }, [show.tconst]);\n  return /*#__PURE__*/React.createElement(Link, {\n    to: showDetailPath,\n    className: \"show-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, show.primaryTitle), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Start Year: \", show.startYear), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"End Year: \", show.endYear), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Type: \", show.titleType), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Is Adult: \", show.isAdult ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Genres: \", show.genres.map(function (genre) {\n    return genre.name;\n  }).join(', ')), averageRating !== null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Rating: \", averageRating)));\n};\nexport default ShowCard;","map":{"version":3,"names":["React","useState","useEffect","Link","ShowCard","_ref","show","showDetailPath","concat","tconst","_useState","_useState2","_slicedToArray","averageRating","setAverageRating","fetchData","fetch","then","response","ok","Error","json","data","console","log","catch","error","createElement","to","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","primaryTitle","startYear","endYear","titleType","isAdult","genres","map","genre","name","join"],"sources":["/home/amishtoor/DjangoProjects/IMDB/imdb_clone/imdb_front/src/components/Shows/ShowCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ShowCard = ({ show }) => {\n  const showDetailPath = `/show/${show.tconst}`;\n  const [averageRating, setAverageRating] = useState(null);\n\n  const fetchData = () => {\n    // Make an API request to fetch the averageRating for the current show.tconst\n    fetch(`http://127.0.0.1:8000/shows/api/titleRatings/${show.tconst}/`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setAverageRating(data.averageRating); // Assuming the API returns an array with one item\n        console.log(data.averageRating);\n      })\n      .catch((error) => {\n        console.error('Error fetching averageRating:', error);\n      });\n  };\n\n  useEffect(() => {\n    fetchData(); // Call fetchData when the component mounts\n  }, [show.tconst]);\n  return (\n    <Link to={showDetailPath} className=\"show-card\">\n      <div>\n        <h4>{show.primaryTitle}</h4>\n        <p>Start Year: {show.startYear}</p>\n        <p>End Year: {show.endYear}</p>\n        <p>Type: {show.titleType}</p>\n        <p>Is Adult: {show.isAdult ? 'Yes' : 'No'}</p>\n        <p>Genres: {show.genres.map((genre) => genre.name).join(', ')}</p>\n        {averageRating !== null && (\n          <p>Rating: {averageRating}</p>\n        )}\n      </div>\n    </Link>\n  );\n};\n\nexport default ShowCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}